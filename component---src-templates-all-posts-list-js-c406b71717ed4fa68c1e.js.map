{"version":3,"sources":["webpack:///./src/templates/all-posts-list.js","webpack:///./node_modules/reactstrap/es/Pagination.js","webpack:///./node_modules/reactstrap/es/PaginationItem.js","webpack:///./node_modules/reactstrap/es/PaginationLink.js","webpack:///./src/components/pagination-links.js","webpack:///./src/components/post-grid.js","webpack:///./src/components/left-sidebar.js"],"names":["postListQuery","AllPostsList","data","pageContext","currentPage","numberOfPages","console","log","title","lg","size","order","allMarkdownRemark","edges","map","edge","index","key","node","frontmatter","date","categories","slug","fields","excerpt","image","featuredImage","childImageSharp","fluid","tags","props","_classNames","className","listClassName","cssModule","Tag","tag","ListTag","listTag","label","attributes","classes","listClasses","createElement","defaultProps","active","disabled","defaultAriaLabel","next","previous","first","last","defaultCaret","ariaLabel","children","Array","isArray","length","href","PaginationLinks","isFirstFivePages","isLessThanFourPagesLeft","howMayPagesLeft","isFristPage","isLast","previousPage","toString","nextPage","totalPages","from","v","k","aria-label","slice","PostGrid","to","category","color","LeftSidebar"],"mappings":"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","file":"component---src-templates-all-posts-list-js-c406b71717ed4fa68c1e.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { graphql } from 'gatsby'\nimport {Row, Col} from 'reactstrap'\n\nimport PostGrid from '../components/post-grid'\nimport LeftSidebar from '../components/left-sidebar'\nimport RightSidebar from '../components/right-sidebar'\nimport PaginationLinks from '../components/pagination-links'\n\nconst AllPostsList = ({data, pageContext}) => {\n\n  //console.log(data)\n\n  const {currentPage, numberOfPages} = pageContext\n\n  console.log (pageContext)\n\n  console.log (`postList ${currentPage} ${numberOfPages}`)\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />   \n      <Row>\n        <Col lg={{size: 6, order: 6}}>\n          <h3>{`Page: ${currentPage}`}</h3>\n          <section>\n            {data.allMarkdownRemark.edges.map((edge, index) => {\n              return (\n                <div key={index}>\n                  <PostGrid\n                    title={edge.node.frontmatter.title}\n                    date={edge.node.frontmatter.date}\n                    categories={edge.node.frontmatter.categories}\n                    slug={edge.node.fields.slug}\n                    excerpt={edge.node.excerpt}\n                    image={\n                      edge.node.frontmatter.featuredImage.childImageSharp.fluid\n                    }\n                    tags={edge.node.frontmatter.tags}\n                  />\n                </div>\n              )\n            })}\n            <PaginationLinks currentPage={currentPage} numberOfPages={numberOfPages}/>\n          </section>\n        </Col>\n        <Col lg={{size: 3, order: 1}}>\n          <LeftSidebar data={data}/>\n        </Col>\n        <Col lg={{size: 3, order: 12}}>\n          <RightSidebar/>\n        </Col>\n      </Row>\n    </Layout>\n  )\n  \n}\n\nexport const postListQuery = graphql`\n    query postListQuery($skip: Int!, $limit: Int! ) {\n        allMarkdownRemark(\n            sort: {fields: [frontmatter___date], order: DESC}\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            categories\n                            date(formatString: \"MMMM Do, YYYY\")\n                            tags\n                            featuredImage {\n                                childImageSharp {\n                                    fluid (maxWidth: 500 maxHeight: 280) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                    excerpt\n                    fields {\n                        slug\n                    }\n                }\n            }\n        } \n    }\n`\n\n\nexport default AllPostsList\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import \"core-js/modules/es6.array.is-array\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import React from \"react\"\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\"\n\nconst PaginationLinks = ({ currentPage, numberOfPages }) => {\n  const isFirstFivePages = currentPage >= 1 && currentPage <= 5 ? true : false\n  const isLessThanFourPagesLeft = numberOfPages - currentPage < 4 ? true : false\n  const howMayPagesLeft = numberOfPages - currentPage\n  const isFristPage = currentPage === 1\n  const isLast = currentPage === numberOfPages\n  const pageLimit = 5\n  const previousPage =\n    currentPage - 1 === 1 ? \"/\" : \"/page/\" + (currentPage - 1).toString()\n  const nextPage = \"/page/\" + (currentPage + 1).toString()\n  const totalPages = numberOfPages === 0 ? [] : Array.from({ length: numberOfPages }, (v, k) => k + 1)\n\n  return (\n    <div className=\"pagination-wrapper\">\n      <Pagination aria-label=\"Page navigation example\">\n\n        {isFristPage ? (\n          <PaginationItem disabled>\n            <PaginationLink previous />\n          </PaginationItem>\n        ) : (\n          <PaginationItem>\n            <PaginationLink previous href={previousPage} />\n          </PaginationItem>\n        )}\n\n        {isFirstFivePages\n          ? (\n              totalPages.slice(0, pageLimit).map(index =>\n                currentPage === index ? (\n                    <PaginationItem active key={`page-number${index}`}>\n                    <PaginationLink\n                        href={`/${index === 1 ? \"\" : \"page/\" + index}`}\n                    >\n                        {index}\n                    </PaginationLink>\n                    </PaginationItem>\n                    ) : (\n                    <PaginationItem key={`page-number${index}`}>\n                    <PaginationLink\n                        href={`/${index === 1 ? \"\" : \"page/\" + index}`}\n                    >\n                        {index}\n                    </PaginationLink>\n                    </PaginationItem>\n                    )\n                )\n            ) // isFirstFivePage === true\n          : (\n              isLessThanFourPagesLeft\n                ? ( totalPages.slice(currentPage - (pageLimit - howMayPagesLeft), currentPage + howMayPagesLeft).map(index =>\n                        currentPage === index ? (\n                            <PaginationItem active key={`page-number${index}`}>\n                                <PaginationLink href={`/${index === 1 ? \"\" : \"page/\" + index}`}>\n                                {index}\n                                </PaginationLink>\n                            </PaginationItem>\n                            ) : (\n                            <PaginationItem key={`page-number${index}`}>\n                                <PaginationLink\n                                href={`/${index === 1 ? \"\" : \"page/\" + index}`}\n                                >\n                                {index}\n                                </PaginationLink>\n                            </PaginationItem>\n                            )\n                        )\n                ) // isLessThanFourPagesLeft === true\n\n                : ( totalPages.slice(currentPage - 1, currentPage + 4).map(index =>\n                        currentPage === index ? (\n                            <PaginationItem active key={`page-number${index}`}>\n                            <PaginationLink\n                                href={`/${index === 1 ? \"\" : \"page/\" + index}`}\n                            >\n                                {index}\n                            </PaginationLink>\n                            </PaginationItem>\n                            ) : (\n                                <PaginationItem key={`page-number${index}`}>\n                                <PaginationLink\n                                    href={`/${index === 1 ? \"\" : \"page/\" + index}`}\n                                >\n                                    {index}\n                                </PaginationLink>\n                                </PaginationItem>\n                            )\n                        )\n                ) // isLessThanFourPagesLeft === false\n            ) // isFirstFivePage === false\n        }\n\n        {isLast ? (\n          <PaginationItem disabled>\n            <PaginationLink next />\n          </PaginationItem>\n        ) : (\n          <PaginationItem>\n            <PaginationLink next href={nextPage} />\n          </PaginationItem>\n        )}\n\n      </Pagination>\n    </div>\n  )\n}\n\nexport default PaginationLinks\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport {Badge, Card, CardTitle, CardText, CardSubtitle, CardBody} from 'reactstrap'\nimport Img from 'gatsby-image'\n\nconst PostGrid = ({title, categories, slug, date, excerpt, image, tags}) => {\n\n    return (\n      <Card>\n         {/* you need a / in your <Link> component. Without that it'll take the relative path \n         https://stackoverflow.com/questions/62414838/gatsby-js-blog-is-appending-blog-twice-to-a-post\n         */}\n        <Link to={`/${slug}`}>\n          <Img fluid={image} />\n        </Link>\n        <CardBody>\n          <CardSubtitle>\n            <span>{date}</span>\n            {` `}\n            <ul className='post-categories'>\n              {categories.map((category, index) => (\n                <li key={index}>\n                    <Badge color='light'>{category}</Badge>\n                </li>\n              ))}\n            </ul>\n          </CardSubtitle>\n          <Link to={`/${slug}`}>\n            <CardTitle>{title}</CardTitle>\n            <CardText>{excerpt}</CardText>\n          </Link>      \n        </CardBody>        \n      </Card>\n    )\n}\n\nexport default PostGrid","import React from \"react\"\n// import {\n//   Card,\n//   CardTitle,\n//   CardBody,\n//   Badge,\n// } from \"reactstrap\"\n// import { Link } from \"gatsby\"\n// import { Slugify } from \"../util/slugify\"\n\nimport Author from \"./author\"\n\nconst LeftSidebar = ({ data }) => {\n  return (\n    <div>\n      <Author />\n      {/* <Card>\n        <CardBody>\n          <CardTitle className=\"mb-3\">Categories</CardTitle>\n\n          {data.allMarkdownRemark.edges.map((edge, index) => {\n            return (\n              <ul className=\"post-categories\" key={index}>\n                {edge.node.frontmatter.categories.map((category, index) => (\n                  <li key={index}>\n                    <Link to={`/categories/${Slugify(category)}`}>\n                      <Badge color=\"light\">{category}</Badge>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )\n          })}\n        </CardBody>\n      </Card> */}\n    </div>\n  )\n}\n\nexport default LeftSidebar\n"],"sourceRoot":""}