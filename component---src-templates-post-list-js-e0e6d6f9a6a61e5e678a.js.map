{"version":3,"sources":["webpack:///./src/templates/post-list.js","webpack:///./src/components/post-grid.js","webpack:///./src/components/left-sidebar.js"],"names":["postListQuery","postList","data","pageContext","posts","allMarkdownRemark","edges","currentPage","title","lg","size","order","map","edge","index","key","node","frontmatter","date","categories","slug","fields","excerpt","image","featuredImage","childImageSharp","fluid","tags","PostGrid","to","className","category","color","LeftSidebar"],"mappings":"4FAAA,8KA6FaA,EAAa,aAkCXC,UArHE,SAACC,EAAMC,GA0CtB,IAAMC,EAAQF,EAAKG,kBAAkBC,MAC9BC,EAAeJ,EAAfI,YAEP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,MAAO,IACxB,qCAAcJ,GACd,iCACGH,EAAMQ,KAAI,SAACC,EAAMC,GAChB,OACE,yBAAKC,IAAKD,GACR,kBAAC,IAAD,CACEN,MAAOK,EAAKG,KAAKC,YAAYT,MAC7BU,KAAML,EAAKG,KAAKC,YAAYC,KAC5BC,WAAYN,EAAKG,KAAKC,YAAYE,WAClCC,KAAMP,EAAKG,KAAKK,OAAOD,KACvBE,QAAST,EAAKG,KAAKM,QACnBC,MACEV,EAAKG,KAAKC,YAAYO,cAAcC,gBAAgBC,MAEtDC,KAAMd,EAAKG,KAAKC,YAAYU,aAOxC,kBAAC,IAAD,CAAKlB,GAAI,CAACC,KAAM,EAAGC,MAAO,IACxB,kBAAC,IAAD,CAAaT,KAAMA,KAErB,kBAAC,IAAD,CAAKO,GAAI,CAACC,KAAM,EAAGC,MAAO,KACxB,kBAAC,IAAD,W,kCCrFV,kIAoCeiB,IA/BE,SAAC,GAA2D,IAA1DpB,EAAyD,EAAzDA,MAAOW,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,KAAMF,EAAgC,EAAhCA,KAAMI,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAiB,EAAVI,KAE9D,OACE,kBAAC,IAAD,KAIE,kBAAC,OAAD,CAAME,GAAE,IAAMT,GACZ,kBAAC,IAAD,CAAKM,MAAOH,KAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,8BAAOL,GADT,IAGE,wBAAIY,UAAU,mBACXX,EAAWP,KAAI,SAACmB,EAAUjB,GAAX,OACd,wBAAIC,IAAKD,GACL,kBAAC,IAAD,CAAOkB,MAAM,SAASD,SAKhC,kBAAC,OAAD,CAAMF,GAAE,IAAMT,GACZ,kBAAC,IAAD,KAAYZ,GACZ,kBAAC,IAAD,KAAWc,Q,kCC7BvB,qCAuCeW,IA3BK,SAAC,GAAa,EAAX/B,KACrB,OACE,6BACE,kBAAC,IAAD","file":"component---src-templates-post-list-js-e0e6d6f9a6a61e5e678a.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport {graphql, useStaticQuery} from 'gatsby'\nimport {Row, Col} from 'reactstrap'\n\nimport PostGrid from '../components/post-grid'\nimport LeftSidebar from '../components/left-sidebar'\nimport RightSidebar from '../components/right-sidebar'\n\nconst postList = (data, pageContext) => {\n\n//   const data = useStaticQuery(\n//     graphql`\n//         query postListQuery($skip: Int!, $limit: Int! ) {\n//           allMarkdownRemark(\n//               sort: {fields: [frontmatter___date], order: DESC}\n//               limit: $limit\n//               skip: $skip\n//             ) {\n//             edges {\n//               node {\n//                 id\n//                 frontmatter {\n//                   title\n//                   categories\n//                   date(formatString: \"MMMM Do, YYYY\")\n//                   tags\n//                   featuredImage {\n//                     childImageSharp {\n//                       fluid (maxWidth: 500 maxHeight: 280) {\n//                         ...GatsbyImageSharpFluid\n//                       }\n//                     }\n//                   }\n//                 }\n//                 excerpt\n//                 fields {\n//                   slug\n//                 }\n//               }\n//             }\n//           }\n\n\n          \n//         }\n//     `\n//   ) \n\n  //console.log(data)\n\n  const posts = data.allMarkdownRemark.edges\n  const {currentPage} = pageContext\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />   \n      <Row>\n        <Col lg={{size: 6, order: 6}}>\n          <h3>{`Page: ${currentPage}`}</h3>\n          <section>\n            {posts.map((edge, index) => {\n              return (\n                <div key={index}>\n                  <PostGrid\n                    title={edge.node.frontmatter.title}\n                    date={edge.node.frontmatter.date}\n                    categories={edge.node.frontmatter.categories}\n                    slug={edge.node.fields.slug}\n                    excerpt={edge.node.excerpt}\n                    image={\n                      edge.node.frontmatter.featuredImage.childImageSharp.fluid\n                    }\n                    tags={edge.node.frontmatter.tags}\n                  />\n                </div>\n              )\n            })}\n          </section>\n        </Col>\n        <Col lg={{size: 3, order: 1}}>\n          <LeftSidebar data={data}/>\n        </Col>\n        <Col lg={{size: 3, order: 12}}>\n          <RightSidebar/>\n        </Col>\n      </Row>\n    </Layout>\n  )\n  \n}\n\nexport const postListQuery = graphql`\n    query postListQuery($skip: Int!, $limit: Int! ) {\n        allMarkdownRemark(\n            sort: {fields: [frontmatter___date], order: DESC}\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            categories\n                            date(formatString: \"MMMM Do, YYYY\")\n                            tags\n                            featuredImage {\n                                childImageSharp {\n                                    fluid (maxWidth: 500 maxHeight: 280) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                    excerpt\n                    fields {\n                        slug\n                    }\n                }\n            }\n        } \n    }\n`\n\n\nexport default postList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport {Badge, Card, CardTitle, CardText, CardSubtitle, CardBody} from 'reactstrap'\nimport Img from 'gatsby-image'\n\nconst PostGrid = ({title, categories, slug, date, excerpt, image, tags}) => {\n\n    return (\n      <Card>\n         {/* you need a / in your <Link> component. Without that it'll take the relative path \n         https://stackoverflow.com/questions/62414838/gatsby-js-blog-is-appending-blog-twice-to-a-post\n         */}\n        <Link to={`/${slug}`}>\n          <Img fluid={image} />\n        </Link>\n        <CardBody>\n          <CardSubtitle>\n            <span>{date}</span>\n            {` `}\n            <ul className='post-categories'>\n              {categories.map((category, index) => (\n                <li key={index}>\n                    <Badge color='light'>{category}</Badge>\n                </li>\n              ))}\n            </ul>\n          </CardSubtitle>\n          <Link to={`/${slug}`}>\n            <CardTitle>{title}</CardTitle>\n            <CardText>{excerpt}</CardText>\n          </Link>      \n        </CardBody>        \n      </Card>\n    )\n}\n\nexport default PostGrid","import React from \"react\"\n// import {\n//   Card,\n//   CardTitle,\n//   CardBody,\n//   Badge,\n// } from \"reactstrap\"\n// import { Link } from \"gatsby\"\n// import { Slugify } from \"../util/slugify\"\n\nimport Author from \"./author\"\n\nconst LeftSidebar = ({ data }) => {\n  return (\n    <div>\n      <Author />\n      {/* <Card>\n        <CardBody>\n          <CardTitle className=\"mb-3\">Categories</CardTitle>\n\n          {data.allMarkdownRemark.edges.map((edge, index) => {\n            return (\n              <ul className=\"post-categories\" key={index}>\n                {edge.node.frontmatter.categories.map((category, index) => (\n                  <li key={index}>\n                    <Link to={`/categories/${Slugify(category)}`}>\n                      <Badge color=\"light\">{category}</Badge>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )\n          })}\n        </CardBody>\n      </Card> */}\n    </div>\n  )\n}\n\nexport default LeftSidebar\n"],"sourceRoot":""}